{
  "id": "nestjs-backend-semi-senior-cloud",
  "title": "Evaluación Técnica Backend Semi-Senior (NestJS, Kafka, Redis, AWS)",
  "categories": [
    {
      "id": "nestjs_basico_avanzado",
      "title": "NestJS: Fundamentos y Avanzado",
      "questions": [
        {
          "id": "nestjs_q1",
          "question": "Evalúa tu nivel en la implementación de Guards para proteger rutas en NestJS.",
          "type": "scale",
          "scaleMax": 5,
          "example": "Crear un guard implementando CanActivate y aplicarlo en un controlador usando @UseGuards(AuthGuard). Nivel 3: lo implementa correctamente en un proyecto real; Nivel 4: lidera la implementación de varios guards y maneja roles complejos."
        },
        {
          "id": "nestjs_q2",
          "question": "Evalúa tu conocimiento sobre inyección de dependencias y servicios request-scoped en NestJS.",
          "type": "scale",
          "scaleMax": 5,
          "example": "Usar @Injectable({ scope: Scope.REQUEST }) para crear un servicio por solicitud. Nivel 3: entiende cuándo usar request-scoped vs singleton; Nivel 4: aplica correctamente en proyectos complejos con múltiples dependencias."
        },
        {
          "id": "nestjs_q3",
          "question": "Evalúa tu capacidad para manejar excepciones personalizadas en NestJS.",
          "type": "scale",
          "scaleMax": 5,
          "example": "Crear una clase que extienda HttpException y usarla en servicios y controladores. Nivel 3: crea excepciones personalizadas simples; Nivel 4: implementa filtros globales y maneja errores de manera consistente en toda la app."
        },
        {
          "id": "nestjs_q4",
          "question": "Evalúa tu experiencia en integración de TypeORM con NestJS.",
          "type": "scale",
          "scaleMax": 5,
          "example": "Inyectar repositorios con @InjectRepository(User) y ejecutar queries. Nivel 3: realiza operaciones CRUD básicas; Nivel 4: optimiza queries y gestiona relaciones complejas."
        }
      ]
    },
    {
      "id": "kafka_mensajeria",
      "title": "Kafka: Mensajería y Streams",
      "questions": [
        {
          "id": "kafka_q1",
          "question": "Evalúa tu nivel en la configuración de productores Kafka en NestJS.",
          "type": "scale",
          "scaleMax": 5,
          "example": "Usar ClientsModule.register con transporte Kafka y enviar mensajes a un topic. Nivel 3: envía mensajes correctamente; Nivel 4: gestiona múltiples topics y errores de envío."
        },
        {
          "id": "kafka_q2",
          "question": "Evalúa tu conocimiento sobre topics y partitions en Kafka.",
          "type": "scale",
          "scaleMax": 5,
          "example": "Explica que un topic es un canal lógico y una partition permite paralelismo. Nivel 3: configura y consume partitions; Nivel 4: optimiza balanceo y escalabilidad de topics."
        },
        {
          "id": "kafka_q3",
          "question": "Evalúa tu capacidad de consumo resiliente de mensajes en NestJS.",
          "type": "scale",
          "scaleMax": 5,
          "example": "Consumer con manejo de retries y ack manual. Nivel 3: procesa mensajes con retries; Nivel 4: implementa reintentos, DLQ y manejo de errores complejos."
        },
        {
          "id": "kafka_q4",
          "question": "Evalúa tu conocimiento en estrategias de entrega 'exactly-once' en Kafka.",
          "type": "scale",
          "scaleMax": 5,
          "example": "Uso de idempotent producer y transacciones. Nivel 3: entiende teoría; Nivel 4: implementa delivery exactly-once en un proyecto real."
        }
      ]
    },
    {
      "id": "redis_caching",
      "title": "Redis: Caching y Pub/Sub",
      "questions": [
        {
          "id": "redis_q1",
          "question": "Evalúa tu experiencia en caching de respuestas HTTP usando Redis en NestJS.",
          "type": "scale",
          "scaleMax": 5,
          "example": "Usar CacheModule con Redis y aplicar @Cacheable. Nivel 3: implementa caching básico; Nivel 4: diseña políticas de expiración y cache de alta concurrencia."
        },
        {
          "id": "redis_q2",
          "question": "Evalúa tu conocimiento del patrón Pub/Sub en Redis.",
          "type": "scale",
          "scaleMax": 5,
          "example": "Publisher envía mensajes y subscribers los reciben. Nivel 3: implementa Pub/Sub simple; Nivel 4: integra Pub/Sub en microservicios distribuidos."
        },
        {
          "id": "redis_q3",
          "question": "Evalúa tu capacidad para manejar expiración de claves en Redis.",
          "type": "scale",
          "scaleMax": 5,
          "example": "Uso de TTL con redis.set('key', value, 'EX', 3600). Nivel 3: aplica TTL básico; Nivel 4: optimiza expiración en cache distribuido."
        },
        {
          "id": "redis_q4",
          "question": "Evalúa tu conocimiento sobre contadores de alta concurrencia en Redis.",
          "type": "scale",
          "scaleMax": 5,
          "example": "Usar operaciones atómicas como INCR. Nivel 3: maneja contadores simples; Nivel 4: diseña contadores eficientes en microservicios concurrentes."
        }
      ]
    },
    {
      "id": "aws_backend",
      "title": "AWS: Integración y Servicios Backend",
      "questions": [
        {
          "id": "aws_q1",
          "question": "Evalúa tu experiencia subiendo archivos a S3 desde NestJS.",
          "type": "scale",
          "scaleMax": 5,
          "example": "Usar s3.upload({ Bucket, Key, Body }). Nivel 3: sube archivos correctamente; Nivel 4: maneja streams, multipart uploads y errores."
        },
        {
          "id": "aws_q2",
          "question": "Evalúa tu conocimiento sobre Lambda procesando eventos de SNS.",
          "type": "scale",
          "scaleMax": 5,
          "example": "Lambda suscrita a topic SNS. Nivel 3: procesa eventos simples; Nivel 4: maneja varios topics y errores de forma robusta."
        },
        {
          "id": "aws_q3",
          "question": "Evalúa tu experiencia usando DynamoDB para sesiones de usuario.",
          "type": "scale",
          "scaleMax": 5,
          "example": "Tabla con userId como partition key y TTL para expirar sesiones. Nivel 3: almacena y lee sesiones; Nivel 4: maneja escalabilidad y patrones de acceso eficientes."
        },
        {
          "id": "aws_q4",
          "question": "Evalúa tu conocimiento en estrategias de alta disponibilidad en AWS.",
          "type": "scale",
          "scaleMax": 5,
          "example": "Uso de Multi-AZ, auto-scaling y balanceadores de carga. Nivel 3: configura servicios básicos HA; Nivel 4: diseña arquitectura resiliente y tolerante a fallos."
        }
      ]
    },
    {
      "id": "arquitectura_backend",
      "title": "Arquitectura y Buenas Prácticas Backend",
      "questions": [
        {
          "id": "arch_q1",
          "question": "Evalúa tu capacidad de diseñar microservicios que integren Kafka, Redis y S3.",
          "type": "scale",
          "scaleMax": 5,
          "example": "KafkaConsumer -> Procesamiento -> Guardar en Redis -> Guardar en S3. Nivel 3: diseño funcional; Nivel 4: arquitectura optimizada y escalable."
        },
        {
          "id": "arch_q2",
          "question": "Evalúa tu conocimiento en logging centralizado para microservicios NestJS.",
          "type": "scale",
          "scaleMax": 5,
          "example": "Usar Winston o Pino con transporte a CloudWatch. Nivel 3: logs locales correctos; Nivel 4: logging centralizado y correlación de requests."
        },
        {
          "id": "arch_q3",
          "question": "Evalúa tu experiencia en resiliencia y tolerancia a fallos en backend distribuido.",
          "type": "scale",
          "scaleMax": 5,
          "example": "Uso de retries, circuit breakers y timeouts. Nivel 3: aplica patrones simples; Nivel 4: implementa resiliencia completa en producción."
        },
        {
          "id": "arch_q4",
          "question": "Evalúa tu conocimiento en métricas y monitoreo de servicios backend.",
          "type": "scale",
          "scaleMax": 5,
          "example": "Monitorear latency, throughput, error rate y recursos. Nivel 3: métricas básicas; Nivel 4: monitoreo completo y alertas proactivas."
        }
      ]
    }
  ]
}

{
  "id": "react-native-semi-senior",
  "title": "Evaluación React Native - Nivel Semi Senior",
  "categories": [
    {
      "id": "react-native-fundamentals",
      "title": "Fundamentos de React Native",
      "questions": [
        {
          "id": "components",
          "question": "¿Qué tan cómodo te sientes trabajando con componentes nativos como View, Text, Image, y TextInput?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Manejo de estados con `useState` y efectos secundarios con `useEffect`."
        },
        {
          "id": "styles",
          "question": "¿Qué nivel de dominio tienes en el uso de StyleSheet para aplicar estilos en componentes de React Native?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Uso de `StyleSheet.create` para optimizar el rendimiento y la lectura de los estilos."
        },
        {
          "id": "props-state",
          "question": "¿Cómo evalúas tu capacidad para manejar props y state en diferentes escenarios en una aplicación móvil?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Pasar props a componentes hijos y gestionar el estado local para la entrada de usuario."
        },
        {
          "id": "hooks",
          "question": "¿Qué tan familiar estás con el uso de hooks como useState, useEffect y custom hooks en el contexto de React Native?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Crear un custom hook para manejar la lógica de fetching de datos de una API."
        },
        {
          "id": "platform-specific",
          "question": "¿Qué experiencia tienes con código específico de plataforma (iOS/Android)?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Usar `Platform.select` para aplicar estilos o componentes diferentes en iOS y Android."
        }
      ]
    },
    {
      "id": "state-management",
      "title": "Gestión de Estado",
      "questions": [
        {
          "id": "context",
          "question": "¿Qué experiencia tienes utilizando Context API para manejo de estado global en aplicaciones React Native?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Implementar un Context para gestionar el estado de autenticación de un usuario a lo largo de la aplicación."
        },
        {
          "id": "redux",
          "question": "¿Qué tan familiar estás con Redux u otras librerías de manejo de estado (Zustand, Recoil) para React Native?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Configurar un store de Redux para manejar el estado de un carrito de compras en una aplicación de e-commerce."
        },
        {
          "id": "prop-drilling",
          "question": "¿Cómo manejas el problema del prop drilling en aplicaciones React Native?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Reestructurar componentes para usar Context API en lugar de pasar props a través de varios niveles de la jerarquía de componentes."
        },
        {
          "id": "async-state",
          "question": "¿Qué tanto dominas el manejo de estado asíncrono (fetching de datos con React Query, SWR) en un entorno móvil?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Utilizar `React Query` para gestionar el estado de una lista de productos que se obtienen de una API."
        },
        {
          "id": "scalability",
          "question": "¿Qué experiencia tienes diseñando arquitecturas de estado escalables en proyectos móviles grandes?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Diseñar una arquitectura con Redux Saga para manejar efectos secundarios complejos y la lógica del negocio."
        }
      ]
    },
    {
      "id": "navigation-and-native-apis",
      "title": "Navegación y API Nativas",
      "questions": [
        {
          "id": "navigation",
          "question": "¿Qué experiencia tienes con librerías de navegación como React Navigation?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Configurar un `Stack Navigator` para la navegación principal y un `Tab Navigator` para la navegación inferior de la aplicación."
        },
        {
          "id": "native-modules",
          "question": "¿Qué tanto dominas la creación y uso de módulos nativos?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Crear un módulo nativo en Java/Kotlin o Objective-C/Swift para acceder a una funcionalidad del sistema que no está expuesta por React Native."
        },
        {
          "id": "permissions",
          "question": "¿Qué experiencia tienes manejando permisos de dispositivos (cámara, geolocalización, etc.)?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Solicitar y verificar permisos de cámara antes de abrir el escáner de código de barras."
        },
        {
          "id": "device-apis",
          "question": "¿Qué tanto utilizas APIs de dispositivos como AsyncStorage, Vibration, o de notificaciones?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Almacenar un token de autenticación en `AsyncStorage` para mantener la sesión del usuario."
        },
        {
          "id": "integration",
          "question": "¿Qué tan cómodo te sientes integrando librerías de terceros (ej: para pagos, mapas) que requieren linking nativo?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Integrar una librería de Stripe para pagos que requiere la instalación de pods en iOS y la configuración de Gradle en Android."
        }
      ]
    },
    {
      "id": "performance-optimization",
      "title": "Performance y Optimización",
      "questions": [
        {
          "id": "performance-fundamentals",
          "question": "¿Qué tanto dominas técnicas de optimización para rendimiento en React Native, como el uso de `useMemo` y `useCallback`?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Envolver un componente costoso con `React.memo` para evitar re-renderizados innecesarios."
        },
        {
          "id": "lists",
          "question": "¿Qué experiencia tienes con la optimización de listas grandes usando `FlatList` y `SectionList`?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Usar la prop `getItemLayout` en `FlatList` para optimizar el rendimiento de la carga de listas grandes."
        },
        {
          "id": "profiling",
          "question": "¿Qué tanto utilizas herramientas de profiling como Flipper, React DevTools, o Performance Monitor para identificar cuellos de botella?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Utilizar el Performance Monitor para identificar cuándo el hilo de JavaScript se está bloqueando debido a cálculos pesados."
        },
        {
          "id": "bundle-size",
          "question": "¿Qué tan cómodo eres optimizando el tamaño del bundle usando herramientas como Metro Bundler?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Analizar el bundle para identificar librerías grandes que pueden ser reemplazadas por alternativas más ligeras."
        },
        {
          "id": "bridge-optimization",
          "question": "¿Qué nivel de conocimiento tienes sobre el 'React Native bridge' y la optimización de la comunicación entre hilos?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Evitar la comunicación excesiva a través del bridge enviando solo los datos necesarios en las llamadas a módulos nativos."
        }
      ]
    },
    {
      "id": "best-practices-and-testing",
      "title": "Buenas Prácticas y Testing",
      "questions": [
        {
          "id": "testing",
          "question": "¿Qué nivel de experiencia tienes escribiendo pruebas unitarias y de integración en React Native (Jest, Detox)?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Escribir una prueba de integración con Detox para simular la navegación de un usuario a través de la aplicación."
        },
        {
          "id": "patterns",
          "question": "¿Qué tanto dominas patrones de diseño comunes en React Native?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Implementar un patrón `Provider` para compartir datos entre componentes sin usar `prop drilling`."
        },
        {
          "id": "folder-structure",
          "question": "¿Qué tan consistente eres organizando la estructura de carpetas y componentes en proyectos de React Native?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Adoptar una estructura de carpetas basada en características (`features`) para organizar la lógica relacionada."
        },
        {
          "id": "code-style",
          "question": "¿Qué tan importante consideras las convenciones de estilo y linters en un proyecto de React Native?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Configurar `ESLint` y `Prettier` para mantener un estilo de código consistente en todo el proyecto."
        },
        {
          "id": "accessibility",
          "question": "¿Qué nivel de conocimiento tienes en accesibilidad (a11y) dentro de aplicaciones React Native?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Usar las props `accessibilityLabel` y `accessibilityHint` para mejorar la experiencia de los lectores de pantalla."
        }
      ]
    }
  ]
}
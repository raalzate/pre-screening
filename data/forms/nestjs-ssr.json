{
  "id": "nestjs-backend-semi-senior",
  "title": "Evaluación Backend (NestJS) - Nivel Semi Senior",
  "categories": [
    {
      "id": "nestjs-fundamentals",
      "title": "Fundamentos de NestJS",
      "questions": [
        {
          "id": "architecture",
          "question": "¿Qué tan familiar estás con la arquitectura de NestJS (módulos, controladores, servicios)?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Diseñar una estructura de aplicación modular para un proyecto de microservicios."
        },
        {
          "id": "dependency-injection",
          "question": "¿Qué nivel de dominio tienes en el sistema de inyección de dependencias de NestJS?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Inyectar un servicio en un controlador usando el decorador `@Injectable()` y el constructor."
        },
        {
          "id": "data-validation",
          "question": "¿Cómo manejas la validación de datos en las peticiones (pipes, DTOs)?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Utilizar `ValidationPipe` y `class-validator` para validar el cuerpo de una petición entrante."
        },
        {
          "id": "middleware",
          "question": "¿Qué tan cómodo te sientes usando guards, interceptors y middlewares?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Crear un interceptor para transformar el formato de la respuesta de un endpoint."
        }
      ]
    },
    {
      "id": "database-and-orm",
      "title": "Bases de Datos y ORM",
      "questions": [
        {
          "id": "database-integration",
          "question": "¿Qué experiencia tienes integrando bases de datos con NestJS (TypeORM, Mongoose)?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Configurar TypeORM con una base de datos relacional y definir relaciones entre entidades."
        },
        {
          "id": "repository-pattern",
          "question": "¿Qué tan familiar estás con el uso del patrón de repositorio para la abstracción de la base de datos?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Crear un repositorio personalizado para encapsular la lógica de consulta de datos."
        },
        {
          "id": "transactions",
          "question": "¿Cómo manejas las transacciones de base de datos en NestJS?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Utilizar la función de transacciones de TypeORM para asegurar la atomicidad de múltiples operaciones de base de datos."
        }
      ]
    },
    {
      "id": "security-and-authentication",
      "title": "Seguridad y Autenticación",
      "questions": [
        {
          "id": "auth",
          "question": "¿Qué experiencia tienes implementando autenticación y autorización (JWT, Passport)?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Configurar un flujo de autenticación con JWT y `Passport.js` para proteger rutas de la API."
        },
        {
          "id": "password-hashing",
          "question": "¿Qué tanto dominas el manejo seguro de contraseñas (hashing, salting)?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Utilizar `bcrypt` para hashear contraseñas antes de almacenarlas en la base de datos."
        },
        {
          "id": "cors",
          "question": "¿Cómo manejas la configuración de CORS y otros problemas de seguridad?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Configurar las opciones de CORS para permitir peticiones solo desde dominios específicos."
        }
      ]
    },
    {
      "id": "best-practices-and-testing",
      "title": "Buenas Prácticas y Testing",
      "questions": [
        {
          "id": "testing",
          "question": "¿Qué experiencia tienes con las pruebas de NestJS (unitarias, de integración, end-to-end)?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Escribir una prueba de integración para un controlador y su servicio asociado."
        },
        {
          "id": "api-documentation",
          "question": "¿Qué tan cómodo te sientes generando documentación de API (Swagger/OpenAPI)?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Utilizar `@nestjs/swagger` para generar documentación interactiva de la API."
        },
        {
          "id": "error-handling",
          "question": "¿Qué tanto dominas el manejo de errores y excepciones en el backend?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Implementar un `ExceptionFilter` para capturar y manejar errores de forma global."
        }
      ]
    },
    {
      "id": "architecture-and-deployment",
      "title": "Arquitectura y Despliegue",
      "questions": [
        {
          "id": "microservices",
          "question": "¿Qué experiencia tienes diseñando arquitecturas de microservicios con NestJS?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Comunicar dos microservicios usando la estrategia de transporte de RabbitMQ o gRPC."
        },
        {
          "id": "deployment",
          "question": "¿Qué experiencia tienes desplegando aplicaciones NestJS en un entorno de producción (Docker, Kubernetes)?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Crear un Dockerfile para contenerizar la aplicación NestJS y desplegarla en un servicio como AWS ECS."
        },
        {
          "id": "performance",
          "question": "¿Qué tanto dominas la optimización del rendimiento en aplicaciones NestJS?",
          "type": "scale",
          "scaleMax": 4,
          "example": "Implementar un caché en las rutas de la API para reducir la carga en la base de datos."
        }
      ]
    }
  ]
}